/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.desafio.ponto.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.desafio.ponto.model.PontoMarcacoes;
import com.desafio.ponto.model.PontoMarcacoesModel;
import com.desafio.ponto.service.persistence.PontoMarcacoesPK;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the PontoMarcacoes service. Represents a row in the &quot;ponto_marcacao&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link PontoMarcacoesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PontoMarcacoesImpl}.
 * </p>
 *
 * @author Peterson Morais
 * @see PontoMarcacoesImpl
 * @see PontoMarcacoes
 * @see PontoMarcacoesModel
 * @generated
 */
@ProviderType
public class PontoMarcacoesModelImpl extends BaseModelImpl<PontoMarcacoes>
	implements PontoMarcacoesModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ponto marcacoes model instance should use the {@link PontoMarcacoes} interface instead.
	 */
	public static final String TABLE_NAME = "ponto_marcacao";
	public static final Object[][] TABLE_COLUMNS = {
			{ "Pis", Types.BIGINT },
			{ "Data", Types.BIGINT },
			{ "DataHora", Types.BIGINT },
			{ "DataReferencia", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("Pis", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("Data", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("DataHora", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("DataReferencia", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table ponto_marcacao (Pis LONG not null,Data LONG not null,DataHora LONG not null,DataReferencia LONG,primary key (Pis, Data, DataHora))";
	public static final String TABLE_SQL_DROP = "drop table ponto_marcacao";
	public static final String ORDER_BY_JPQL = " ORDER BY pontoMarcacoes.id.DataHora DESC";
	public static final String ORDER_BY_SQL = " ORDER BY ponto_marcacao.DataHora DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.desafio.ponto.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.desafio.ponto.model.PontoMarcacoes"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.desafio.ponto.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.desafio.ponto.model.PontoMarcacoes"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.desafio.ponto.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.desafio.ponto.model.PontoMarcacoes"),
			true);
	public static final long DATA_COLUMN_BITMASK = 1L;
	public static final long DATAREFERENCIA_COLUMN_BITMASK = 2L;
	public static final long PIS_COLUMN_BITMASK = 4L;
	public static final long DATAHORA_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.desafio.ponto.service.util.ServiceProps.get(
				"lock.expiration.time.com.desafio.ponto.model.PontoMarcacoes"));

	public PontoMarcacoesModelImpl() {
	}

	@Override
	public PontoMarcacoesPK getPrimaryKey() {
		return new PontoMarcacoesPK(_Pis, _Data, _DataHora);
	}

	@Override
	public void setPrimaryKey(PontoMarcacoesPK primaryKey) {
		setPis(primaryKey.Pis);
		setData(primaryKey.Data);
		setDataHora(primaryKey.DataHora);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new PontoMarcacoesPK(_Pis, _Data, _DataHora);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((PontoMarcacoesPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return PontoMarcacoes.class;
	}

	@Override
	public String getModelClassName() {
		return PontoMarcacoes.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("Pis", getPis());
		attributes.put("Data", getData());
		attributes.put("DataHora", getDataHora());
		attributes.put("DataReferencia", getDataReferencia());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long Pis = (Long)attributes.get("Pis");

		if (Pis != null) {
			setPis(Pis);
		}

		Long Data = (Long)attributes.get("Data");

		if (Data != null) {
			setData(Data);
		}

		Long DataHora = (Long)attributes.get("DataHora");

		if (DataHora != null) {
			setDataHora(DataHora);
		}

		Long DataReferencia = (Long)attributes.get("DataReferencia");

		if (DataReferencia != null) {
			setDataReferencia(DataReferencia);
		}
	}

	@Override
	public long getPis() {
		return _Pis;
	}

	@Override
	public void setPis(long Pis) {
		_columnBitmask |= PIS_COLUMN_BITMASK;

		if (!_setOriginalPis) {
			_setOriginalPis = true;

			_originalPis = _Pis;
		}

		_Pis = Pis;
	}

	public long getOriginalPis() {
		return _originalPis;
	}

	@Override
	public long getData() {
		return _Data;
	}

	@Override
	public void setData(long Data) {
		_columnBitmask |= DATA_COLUMN_BITMASK;

		if (!_setOriginalData) {
			_setOriginalData = true;

			_originalData = _Data;
		}

		_Data = Data;
	}

	public long getOriginalData() {
		return _originalData;
	}

	@Override
	public long getDataHora() {
		return _DataHora;
	}

	@Override
	public void setDataHora(long DataHora) {
		_columnBitmask = -1L;

		_DataHora = DataHora;
	}

	@Override
	public long getDataReferencia() {
		return _DataReferencia;
	}

	@Override
	public void setDataReferencia(long DataReferencia) {
		_columnBitmask |= DATAREFERENCIA_COLUMN_BITMASK;

		if (!_setOriginalDataReferencia) {
			_setOriginalDataReferencia = true;

			_originalDataReferencia = _DataReferencia;
		}

		_DataReferencia = DataReferencia;
	}

	public long getOriginalDataReferencia() {
		return _originalDataReferencia;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public PontoMarcacoes toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (PontoMarcacoes)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PontoMarcacoesImpl pontoMarcacoesImpl = new PontoMarcacoesImpl();

		pontoMarcacoesImpl.setPis(getPis());
		pontoMarcacoesImpl.setData(getData());
		pontoMarcacoesImpl.setDataHora(getDataHora());
		pontoMarcacoesImpl.setDataReferencia(getDataReferencia());

		pontoMarcacoesImpl.resetOriginalValues();

		return pontoMarcacoesImpl;
	}

	@Override
	public int compareTo(PontoMarcacoes pontoMarcacoes) {
		int value = 0;

		if (getDataHora() < pontoMarcacoes.getDataHora()) {
			value = -1;
		}
		else if (getDataHora() > pontoMarcacoes.getDataHora()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof PontoMarcacoes)) {
			return false;
		}

		PontoMarcacoes pontoMarcacoes = (PontoMarcacoes)obj;

		PontoMarcacoesPK primaryKey = pontoMarcacoes.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		PontoMarcacoesModelImpl pontoMarcacoesModelImpl = this;

		pontoMarcacoesModelImpl._originalPis = pontoMarcacoesModelImpl._Pis;

		pontoMarcacoesModelImpl._setOriginalPis = false;

		pontoMarcacoesModelImpl._originalData = pontoMarcacoesModelImpl._Data;

		pontoMarcacoesModelImpl._setOriginalData = false;

		pontoMarcacoesModelImpl._originalDataReferencia = pontoMarcacoesModelImpl._DataReferencia;

		pontoMarcacoesModelImpl._setOriginalDataReferencia = false;

		pontoMarcacoesModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<PontoMarcacoes> toCacheModel() {
		PontoMarcacoesCacheModel pontoMarcacoesCacheModel = new PontoMarcacoesCacheModel();

		pontoMarcacoesCacheModel.pontoMarcacoesPK = getPrimaryKey();

		pontoMarcacoesCacheModel.Pis = getPis();

		pontoMarcacoesCacheModel.Data = getData();

		pontoMarcacoesCacheModel.DataHora = getDataHora();

		pontoMarcacoesCacheModel.DataReferencia = getDataReferencia();

		return pontoMarcacoesCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{Pis=");
		sb.append(getPis());
		sb.append(", Data=");
		sb.append(getData());
		sb.append(", DataHora=");
		sb.append(getDataHora());
		sb.append(", DataReferencia=");
		sb.append(getDataReferencia());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("com.desafio.ponto.model.PontoMarcacoes");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>Pis</column-name><column-value><![CDATA[");
		sb.append(getPis());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Data</column-name><column-value><![CDATA[");
		sb.append(getData());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>DataHora</column-name><column-value><![CDATA[");
		sb.append(getDataHora());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>DataReferencia</column-name><column-value><![CDATA[");
		sb.append(getDataReferencia());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = PontoMarcacoes.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			PontoMarcacoes.class, ModelWrapper.class
		};
	private long _Pis;
	private long _originalPis;
	private boolean _setOriginalPis;
	private long _Data;
	private long _originalData;
	private boolean _setOriginalData;
	private long _DataHora;
	private long _DataReferencia;
	private long _originalDataReferencia;
	private boolean _setOriginalDataReferencia;
	private long _columnBitmask;
	private PontoMarcacoes _escapedModel;
}